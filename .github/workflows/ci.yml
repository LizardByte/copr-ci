---
name: CI Copr
permissions:
  contents: read

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - master
  release:
    types:
      - prereleased
      - released

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  call-copr-ci:
    uses: ./.github/workflows/copr-ci.yml
    if: github.event_name == 'pull_request' || github.event_name == 'release'  # not push event
    secrets:
      COPR_BETA_WEBHOOK_TOKEN: ${{ secrets.COPR_BETA_WEBHOOK_TOKEN }}
      COPR_STABLE_WEBHOOK_TOKEN: ${{ secrets.COPR_STABLE_WEBHOOK_TOKEN }}
      COPR_CLI_CONFIG: ${{ secrets.COPR_CLI_CONFIG }}
    with:
      copr_pr_webhook_token: "05fc9b07-a19b-4f83-89b2-ae1e7e0b5282"
      github_org_owner: LizardByte
      copr_ownername: lizardbyte
      auto_update_package: true
      job_timeout: 60

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Setup Release
        id: setup-release
        uses: LizardByte/actions/actions/release_setup@v2025.914.154454
        with:
          github_token: ${{ secrets.GH_BOT_TOKEN }}

      - name: Create Release
        id: action
        uses: LizardByte/actions/actions/release_create@v2025.914.154454
        with:
          allowUpdates: false
          artifacts: ''
          body: ${{ steps.setup-release.outputs.release_body }}
          generateReleaseNotes: ${{ steps.setup-release.outputs.release_generate_release_notes }}
          name: ${{ steps.setup-release.outputs.release_tag }}
          prerelease: true
          tag: ${{ steps.setup-release.outputs.release_tag }}
          token: ${{ secrets.GH_BOT_TOKEN }}
